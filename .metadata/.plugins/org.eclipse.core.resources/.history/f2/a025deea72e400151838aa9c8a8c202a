
package ch.hearc.p2.test.image;

import java.awt.FlowLayout;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.geom.AffineTransform;
import java.awt.geom.Rectangle2D;

import javax.swing.JPanel;
import javax.swing.Timer;

public class JPanelImage extends JPanel
	{
	
	/*------------------------------------------------------------------*\
	|*							Constructeurs							*|
	\*------------------------------------------------------------------*/
	
	public JPanelImage()
		{
		rect1Dx = 0;
		rectangle1 = new Rectangle2D.Double(120, 50, 200, 250);
		
		geometry();
		control();
		appearance();
		animer();
		}
		
	/*------------------------------------------------------------------*\
	|*							Methodes Public							*|
	\*------------------------------------------------------------------*/
	
	private void animer()
		{
		int dtms = 100;
		
		Timer timer = new Timer(dtms, new ActionListener()
			{
			
			
			@Override
			public void actionPerformed(ActionEvent e)
				{
				updatePosition();
				repaint();
				}
				
			private void updatePosition()
				{
				rect1Dx += 1;
				}
			});
		
		timer.start();
		}
		
	@Override
	protected void paintComponent(Graphics g)
		{
		super.paintComponent(g);
		Graphics2D g2d = (Graphics2D)g;
		AffineTransform transform = g2d.getTransform();
		draw(g2d);
		g2d.setTransform(transform);
		}
		
	/*------------------------------*\
	|*				Set				*|
	\*------------------------------*/
	
	/*------------------------------*\
	|*				Get				*|
	\*------------------------------*/
	
	/*------------------------------------------------------------------*\
	|*							Methodes Private						*|
	\*------------------------------------------------------------------*/
	
	private void draw(Graphics2D g2d)
		{
		rectangle1.setRect(rectangle1.getX() + rect1Dx, 0, rectangle1.getWidth(), rectangle1.getWidth());
		g2d.draw(rectangle1);
		}
		
	private void geometry()
		{
		// JComponent : Instanciation
		
		// Layout : Specification
			{
			FlowLayout flowlayout = new FlowLayout(FlowLayout.CENTER);
			setLayout(flowlayout);
			
			// flowlayout.setHgap(20);
			// flowlayout.setVgap(20);
			}
			
		// JComponent : add
		
		}
		
	private void control()
		{
		// rien
		}
		
	private void appearance()
		{
		// rien
		}
		
	/*------------------------------------------------------------------*\
	|*							Attributs Private						*|
	\*------------------------------------------------------------------*/
	
	// Tools
	private Rectangle2D rectangle1;
	private double rect1Dx;
	}
